{"version":3,"sources":["assets/noPosterSmall.png","Components/Header.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Header","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","to","Container","div","Title","span","Grid","Section","title","children","role","aria-label","Text","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","require","length","substring","HomePresenter","nowPlaying","popular","upcoming","error","loading","Loader","map","movie","key","original_title","poster_path","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","Backdrop","bgImage","Content","Cover","Data","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","name","overview","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","console","log","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.baf6e23e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n    color: white;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 50px;\n    display: flex;\n    align-items: center;\n    background-color: rgba(20, 20, 20, 0.8);\n    z-index: 10;\n    box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n    display: flex;\n`;\n\nconst Item = styled.li`\n    width: 80px;\n    height: 50px;\n    text-align: center;\n    border-bottom: 5px solid ${props => props.current ? \"#3498db\" : \"transparent\"};\n    transition: border-bottom .5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n    height: 50px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n    <Header>\n        <List>\n            <Item current={pathname === \"/\"}>\n                <SLink to=\"/\">Movies</SLink>\n            </Item>\n            <Item current={pathname === \"/tv\"}>\n                <SLink to=\"/tv\">TV</SLink>\n            </Item>\n            <Item current={pathname === \"/search\"}>\n                <SLink to=\"/search\">Search</SLink>\n            </Item>\n        </List>\n    </Header>\n));","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    :not(:last-child) {\n        margin-bottom: 50px;\n    }\n`;\n\nconst Title = styled.span`\n    font-size: 16px;\n    font-weight: 600;\n    margin-bottom: 25px;\n`;\n\nconst Grid = styled.div`\n    margin-top: 25px;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, 125px);\n    grid-gap: 25px;\n`;\n\nconst Section = ({title, children}) => (\n    <Container>\n        <Title>{ title }</Title>\n        <Grid>{ children }</Grid>\n    </Container>\n);\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node   \n    ])\n}\n\nexport default Section;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n    font-size: 32px;\n    margin-top: 20px;\n`;\n\nexport default () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏳\n    </span>\n  </Container>\n);\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n`;\n\nconst Text = styled.span`\n    color: ${props => props.color};\n    font-size: 20px;\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired\n}\n\nexport default Message;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    font-size: 12px;\n`;\n\nconst Image = styled.div`\n    background-image: url(${props => props.bgUrl});\n    height: 180px;\n    background-size: cover;\n    border-radius: 4px;\n    background-position: center center;\n    transition: opacity .1s linear;\n`;\n\nconst Rating = styled.span`\n    position: absolute;\n    bottom: 5px;\n    right: 5px;\n    opacity: 0;\n    transition: opacity .1s linear;\n`;\n\nconst ImageContainer = styled.div`\n    margin-bottom: 5px;\n    position: relative;\n    &:hover {\n        ${Image} {\n            opacity: 0.3;\n        }\n        ${Rating} {\n            opacity: 1;\n        }\n    }\n`;\n\nconst Title = styled.span`\n    display: block;\n    margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n    font-size: 10px;\n    color: rgba(255, 255, 255, 0.5);\n`;\n\n\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n    <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n        <Container>\n            <ImageContainer>\n            <Image bgUrl={imageUrl ? `https://image.tmdb.org/t/p/w300/${imageUrl}` : require(\"../assets/noPosterSmall.png\")}></Image>\n            <Rating>\n                <span role=\"img\" aria-label=\"rating\">\n                    ⭐️\n                </span>{\" \"}\n                {rating}/10\n            </Rating>\n            </ImageContainer>\n            <Title>{title.length > 20 ? `${title.substring(0, 20)}...` : title}</Title>\n            <Year>{year}</Year>\n        </Container>\n    </Link>\n);\n\nPoster.propTypes = {\n    id: PropTypes.number.isRequired,\n    imageUrl: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    rating: PropTypes.number,\n    year: PropTypes.string,\n    isMovie: PropTypes.bool\n};\n\nexport default Poster;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, error, loading }) => (\n  <>\n    <Helmet>\n      <title>Movies | Wanflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        <Helmet>\n          <title>Movies | Wanflix</title>\n        </Helmet>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing\">\n            {nowPlaying.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies\">\n            {upcoming.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies\">\n            {popular.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.original_title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.propTypes = {\n    nowPlaying: PropTypes.array,\n    popular: PropTypes.array,\n    upcoming: PropTypes.array,\n    error: PropTypes.string,\n    loading: PropTypes.bool.isRequired,\n}\n\nexport default HomePresenter;","import axios from \"axios\";\n\nconst api = axios.create({\n    baseURL: \"https://api.themoviedb.org/3/\",\n    params: {\n        api_key: \"e6f3d7d9dca37fb87ff22fa6891510ad\",\n        language: \"ko-KR\",\n    }\n});\n\nexport const moviesApi = {\n    nowPlaying: () => api.get(\"movie/now_playing\"),\n    upcoming: () => api.get(\"movie/upcoming\"),\n    popular: () => api.get(\"movie/popular\"),\n    movieDetail: id => api.get(`movie/${id}`, {\n        params: {\n            append_to_response: \"videos\"\n        }\n    }),\n    search: (term) => api.get(\"search/movie\", {\n        params: {\n            query: encodeURIComponent(term)\n        }\n    })\n};\n\nexport const tvApi = {\n    topRated: () => api.get(\"tv/top_rated\"),\n    popular: () => api.get(\"tv/popular\"),\n    airingToday: () => api.get(\"tv/airing_today\"),\n    showDetail: id => api.get(`tv/${id}`, {\n        params: {\n            append_to_response: \"videos\"\n        }\n    }),\n    search: (term) => api.get(\"search/tv\", {\n        params: {\n            query: encodeURIComponent(term)\n        }\n    })\n};","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const { data: { results: nowPlaying }} = await moviesApi.nowPlaying();\n      const { data: { results: upcoming }} = await moviesApi.upcoming();\n      const { data: { results: popular }} = await moviesApi.popular();\n      this.setState({\n        nowPlaying, upcoming, popular\n      });\n    } catch {\n      this.setState({\n        error: \"Cannot get movie information.\"\n      })\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport styled from \"styled-components\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, error, loading }) => (\n  <>\n    <Helmet>\n      <title>TV Shows | Wanflix</title>\n    </Helmet>\n\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows\">\n            {topRated.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows\">\n            {popular.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today\">\n            {airingToday.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.original_name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.propTypes = {\n    topRated: PropTypes.array,\n    popular: PropTypes.array,\n    airingToday: PropTypes.array,\n    error: PropTypes.string,\n    loading: PropTypes.bool.isRequired,\n}\n\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const { data: { results: topRated } } = await tvApi.topRated();\n      const { data: { results: popular } } = await tvApi.popular();\n      const { data: { results: airingToday } } = await tvApi.airingToday();\n      this.setState({ topRated, popular, airingToday });\n    } catch {\n      this.setState({error: \"Cannot find TV information.\"});\n    } finally {\n      this.setState({loading: false});\n    }\n  }\n  \n  render() {\n    const { topRated, popular, airingToday, error, loading } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  error,\n  loading,\n  searchTerm,\n  handleSubmit,\n  updateTerm\n}) => (\n  <>\n    <Helmet>\n      <title>Search | Wanflix</title>\n    </Helmet>\n    <Container>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          placeholder=\"Search Movies or TV Shows\"\n          value={searchTerm}\n          onChange={updateTerm}\n        />\n      </Form>\n      {loading ? (\n        <Loader />\n      ) : (\n        <>\n          {movieResults && movieResults.length > 0 && (\n            <Section title=\"Movie Results\">\n              {movieResults.map(movie => (\n                <Poster\n                  key={movie.id}\n                  id={movie.id}\n                  title={movie.original_title}\n                  imageUrl={movie.poster_path}\n                  rating={movie.vote_average}\n                  year={\n                    movie.release_date && movie.release_date.substring(0, 4)\n                  }\n                  isMovie={true}\n                />\n              ))}\n            </Section>\n          )}\n          {tvResults && tvResults.length > 0 && (\n            <Section title=\"TV Shows Results\">\n              {tvResults.map(show => (\n                <Poster\n                  key={show.id}\n                  id={show.id}\n                  title={show.original_name}\n                  imageUrl={show.poster_path}\n                  rating={show.vote_average}\n                  year={\n                    show.first_air_date && show.first_air_date.substring(0, 4)\n                  }\n                />\n              ))}\n            </Section>\n          )}\n          {error && <Message color=\"#e74c3c\" text={error} />}\n          {tvResults &&\n            movieResults &&\n            tvResults.length === 0 &&\n            movieResults.length === 0 && (\n              <Message color=\"#95a5a6\" text=\"Nothing found.\" />\n            )}\n        </>\n      )}\n    </Container>\n  </>\n);\n\nSearchPresenter.propTypes = {\n    movieResults: PropTypes.array,\n    tvResults: PropTypes.array,\n    error: PropTypes.string,\n    loading: PropTypes.bool.isRequired,\n    searchTerm: PropTypes.string,\n    handleSubmit: PropTypes.func.isRequired,\n    updateTerm: PropTypes.func.isRequired\n}\n\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    loading: false,\n    error: null\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = (event) => {\n    const { target: { value } } = event;\n    this.setState({\n      searchTerm: value\n    })\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    try {\n      const {data: { results: movieResults }} = await moviesApi.search(searchTerm);\n      const {data: { results: tvResults }} = await tvApi.search(searchTerm);\n      this.setState({ movieResults: movieResults, tvResults: tvResults, loading: true });\n    } catch {\n      this.setState({ error: \"Cannot find results.\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        loading={loading}\n        error={error}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport styled from \"styled-components\";\nimport Loader from \"Components/Loader\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst Backdrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(4px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  z-index: 1;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  height: 100%;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 30px;\n`;\n\nconst Title = styled.span`\n  font-size: 32px;\n  margin-bottom: 10px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst DetailPresenter = ({ result, error, loading }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Wanflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>{result.original_title ? result.original_title : result.original_name} | Wanflix</title>\n      </Helmet>\n      <Backdrop\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n              : require(\"../../assets/noPosterSmall.png\")\n          }\n        ></Cover>\n        <Data>\n          <Title>\n            {result.original_title\n              ? result.original_title\n              : result.original_name}\n          </Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>ᐧ</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>ᐧ</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1 ? genre.name : `${genre.name} / `\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.propTypes = {\n    result: PropTypes.object,\n    error: PropTypes.string,\n    loading: PropTypes.bool.isRequired,\n}\n\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const { location: { pathname } } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\")\n    };\n  }\n\n  async componentDidMount() {\n    const { match: { params: { id }}, history: { push } } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({data: result} = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({data: result} = await tvApi.showDetail(parsedId));\n      }\n      console.log(result)\n    } catch {\n      this.setState({ error: \"Cannot find the target.\"})\n    } finally {\n      this.setState({ loading: false, result })\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    return (\n      <DetailPresenter\n        result={result}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\nimport Header from \"Components/Header\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n    <Router>\n        <>\n            <Header />\n            <Switch>\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/tv\" component={TV} />\n                {/* <Route path=\"/tv/popular\" render={() => <h1>Popular</h1>} /> */}\n                <Route path=\"/search\" component={Search} />\n                <Route path=\"/movie/:id\" component={Detail} />\n                <Route path=\"/show/:id\" component={Detail} />\n                <Redirect from=\"*\" to=\"/\" />\n            </Switch>\n        </>\n    </Router>\n);","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a {\n        text-decoration: none;\n        color: inherit;\n    }\n    * {\n        box-sizing: border-box;\n    }\n    body {\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size: 14px;\n        background-color: rgba(20, 20, 20, 1);\n        color: white;\n        padding-top: 50px;\n    }\n`;\n\nexport default globalStyles;","import React, { Component } from 'react';\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <Router />\n        <GlobalStyles />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}